ian@ian-Latitude-3190-2-in-1:~/Downloads$ gfortran coa.f90
coa.f90:7:33:

    7 | ter(len=80) :: greeting[*] ! scalar coarray
      |                         1

Fatal Error: Coarrays disabled at (1), use ‘-fcoarray=’ to enable
compilation terminated.
ian@ian-Latitude-3190-2-in-1:~/Downloads$ gfortran coa.f90 -fcoarray=single
ian@ian-Latitude-3190-2-in-1:~/Downloads$ ./a.out
Enter your greeting: hello to all
Greetings hello to all from image 1
ian@ian-Latitude-3190-2-in-1:~/Downloads$ cat coa.f90
! Created by Tobias Burnus 2010.
! Edited by Ian Martin Ajzenszmidt, Melbourne Australa 2023

program Hello_World
  implicit none
  integer :: i  ! Local variable
  character(len=80) :: greeting[*] ! scalar coarray
  ! Note: "greeting" is the local variable while "greeting[<index>]"
  ! accesses the variable on a remote image
 
  ! Interact with the user on Image 1
  if (this_image() == 1) then
    write(*,'(a)',advance='no') 'Enter your greeting: '
    read(*,'(a)') greeting
 
    ! Distribute information to other images
    do i = 2, num_images()
      greeting[i] = greeting 
   end do
  end if
 
  sync all ! Barrier to make sure the data has arrived
 
  ! I/O from all nodes
  write(*,'(3a,i0)') 'Greetings ',trim(greeting),' from image ', this_image()
end program Hello_world
ian@ian-Latitude-3190-2-in-1:~/Downloads$ gfortran coa.f90 -fcoarray=single -S
ian@ian-Latitude-3190-2-in-1:~/Downloads$ gfortran coa.s -o coas
ian@ian-Latitude-3190-2-in-1:~/Downloads$ ./coas
Enter your greeting: Hello There
Greetings Hello There from image 1
ian@ian-Latitude-3190-2-in-1:~/Downloads$ cat coa.s
	.file	"coa.f90"
	.text
	.section	.rodata
.LC0:
	.string	"coa.f90"
.LC1:
	.ascii	"no"
.LC2:
	.ascii	"(a)"
.LC3:
	.ascii	"Enter your greeting: "
.LC4:
	.ascii	"(3a,i0)"
.LC5:
	.ascii	"Greetings "
.LC6:
	.ascii	" from image "
	.align 4
.LC7:
	.long	1
	.text
	.type	MAIN__, @function
MAIN__:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$640, %rsp
	leaq	.LC0(%rip), %rax
	movq	%rax, -632(%rbp)
	movl	$13, -624(%rbp)
	leaq	.LC1(%rip), %rax
	movq	%rax, -536(%rbp)
	movq	$2, -544(%rbp)
	leaq	.LC2(%rip), %rax
	movq	%rax, -560(%rbp)
	movq	$3, -552(%rbp)
	movl	$12288, -640(%rbp)
	movl	$6, -636(%rbp)
	leaq	-640(%rbp), %rax
	movq	%rax, %rdi
	call	_gfortran_st_write@PLT
	leaq	-640(%rbp), %rax
	movl	$21, %edx
	leaq	.LC3(%rip), %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_gfortran_transfer_character_write@PLT
	leaq	-640(%rbp), %rax
	movq	%rax, %rdi
	call	_gfortran_st_write_done@PLT
	leaq	.LC0(%rip), %rax
	movq	%rax, -632(%rbp)
	movl	$14, -624(%rbp)
	leaq	.LC2(%rip), %rax
	movq	%rax, -560(%rbp)
	movq	$3, -552(%rbp)
	movl	$4096, -640(%rbp)
	movl	$5, -636(%rbp)
	leaq	-640(%rbp), %rax
	movq	%rax, %rdi
	call	_gfortran_st_read@PLT
	leaq	-96(%rbp), %rcx
	leaq	-640(%rbp), %rax
	movl	$80, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_gfortran_transfer_character@PLT
	leaq	-640(%rbp), %rax
	movq	%rax, %rdi
	call	_gfortran_st_read_done@PLT
	movl	$2, -4(%rbp)
.L3:
	cmpl	$1, -4(%rbp)
	setg	%al
	movzbl	%al, %eax
	testl	%eax, %eax
	jne	.L5
	addl	$1, -4(%rbp)
	jmp	.L3
.L5:
	nop
	leaq	.LC0(%rip), %rax
	movq	%rax, -632(%rbp)
	movl	$25, -624(%rbp)
	leaq	.LC4(%rip), %rax
	movq	%rax, -560(%rbp)
	movq	$7, -552(%rbp)
	movl	$4096, -640(%rbp)
	movl	$6, -636(%rbp)
	leaq	-640(%rbp), %rax
	movq	%rax, %rdi
	call	_gfortran_st_write@PLT
	leaq	-640(%rbp), %rax
	movl	$10, %edx
	leaq	.LC5(%rip), %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_gfortran_transfer_character_write@PLT
	leaq	-96(%rbp), %rdx
	leaq	-104(%rbp), %rsi
	leaq	-112(%rbp), %rax
	movq	%rdx, %rcx
	movl	$80, %edx
	movq	%rax, %rdi
	call	_gfortran_string_trim@PLT
	movq	-112(%rbp), %rdx
	movq	-104(%rbp), %rcx
	leaq	-640(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_gfortran_transfer_character_write@PLT
	movq	-112(%rbp), %rax
	testq	%rax, %rax
	jle	.L4
	movq	-104(%rbp), %rax
	movq	%rax, %rdi
	call	free@PLT
.L4:
	leaq	-640(%rbp), %rax
	movl	$12, %edx
	leaq	.LC6(%rip), %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_gfortran_transfer_character_write@PLT
	leaq	-640(%rbp), %rax
	movl	$4, %edx
	leaq	.LC7(%rip), %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_gfortran_transfer_integer_write@PLT
	leaq	-640(%rbp), %rax
	movq	%rax, %rdi
	call	_gfortran_st_write_done@PLT
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	MAIN__, .-MAIN__
	.globl	main
	.type	main, @function
main:
.LFB1:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movl	%edi, -4(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdx
	movl	-4(%rbp), %eax
	movq	%rdx, %rsi
	movl	%eax, %edi
	call	_gfortran_set_args@PLT
	leaq	options.5.0(%rip), %rax
	movq	%rax, %rsi
	movl	$7, %edi
	call	_gfortran_set_options@PLT
	call	MAIN__
	movl	$0, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	main, .-main
	.section	.rodata
	.align 16
	.type	options.5.0, @object
	.size	options.5.0, 28
options.5.0:
	.long	2116
	.long	4095
	.long	0
	.long	1
	.long	1
	.long	0
	.long	31
	.ident	"GCC: (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0"
	.section	.note.GNU-stack,"",@progbits
ian@ian-Latitude-3190-2-in-1:~/Downloads$ 
